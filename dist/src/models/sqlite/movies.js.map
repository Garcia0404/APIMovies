{"version":3,"sources":["../../../../src/models/sqlite/movies.js"],"sourcesContent":["import { createClient } from \"@libsql/client\";\r\nimport { randomUUID } from \"crypto\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\nconst db = createClient({\r\n  url: process.env.SQLITE_URL,\r\n  authToken: process.env.SQLITE_TOKEN,\r\n});\r\nexport class MovieModel {\r\n  static getAll = async () => {\r\n    const movies = await db.execute(`\r\n      SELECT * FROM movie  \r\n    `);\r\n    const moviesr = movies.rows;\r\n    const movieUpdated = await Promise.all(\r\n      moviesr.map(async (movie) => {\r\n        const genres_id = await db.execute({\r\n          sql: `SELECT genre_id FROM movie_genre WHERE movie_id=?`,\r\n          args: [movie.id],\r\n        });\r\n        const genres_idr = genres_id.rows;\r\n        const genres = await Promise.all(\r\n          genres_idr.map(async (id) => {\r\n            const gnrs = await db.execute({\r\n              sql: `SELECT name FROM genre WHERE id=?`,\r\n              args: [id.genre_id],\r\n            });\r\n            return gnrs.rows[0].name;\r\n          })\r\n        );\r\n        const updated = {\r\n          ...movie,\r\n          genres\r\n        }\r\n        return updated;\r\n      })\r\n    );\r\n    return movieUpdated;\r\n  };\r\n  static create = async ({ movie }) => {\r\n    const { title, year, description, director, duration, image,genres } = movie;\r\n    await db.execute({\r\n      sql: `INSERT INTO movie(title,year,description,director,duration,image) VALUES (?,?,?,?,?,?)`,\r\n      args: [title, year, description, director, duration, image],\r\n    });\r\n    await Promise.all(genres.map(async(genre) => {\r\n      await db.execute({\r\n        sql:`INSERT INTO movie_genre(movie_id,genre_id) VALUES ((SELECT id FROM movie WHERE title=?),(SELECT id FROM genre WHERE name=?));`,\r\n        args:[title,genre]\r\n      })\r\n      return\r\n    }))\r\n    const id = await db.execute({\r\n      sql:`SELECT id FROM movie WHERE title=?`,\r\n      args:[title]\r\n    })\r\n    const uuid = id.rows[0].id\r\n    return {id:uuid,...movie };\r\n  };\r\n  static getById = async ({ id }) => {\r\n    const movie = await db.execute({\r\n      sql: `SELECT * FROM movie WHERE id=?`,\r\n      args: [id],\r\n    });\r\n    if (movie.length === 0) {\r\n      return null;\r\n    }\r\n    return movie.rows[0];\r\n  };\r\n  static update = async ({ id, update }) => {\r\n    const movie = await db.execute({\r\n      sql: `SELECT * FROM movie WHERE id=?`,\r\n      args: [id],\r\n    });\r\n    if (movie.length === 0) {\r\n      return null;\r\n    }\r\n    const movieUpdated = {\r\n      ...movie.rows[0],\r\n      ...update,\r\n    };\r\n    await db.execute({\r\n      sql: `UPDATE movie \r\n      SET title=?,\r\n      year=?,\r\n      description=?,\r\n      director=?,\r\n      duration=?,\r\n      image=?\r\n      WHERE id=?;`,\r\n      args: [\r\n        movieUpdated.title,\r\n        movieUpdated.year,\r\n        movieUpdated.description,\r\n        movieUpdated.director,\r\n        movieUpdated.duration,\r\n        movieUpdated.image,\r\n        id,\r\n      ],\r\n    });\r\n    return movieUpdated;\r\n  };\r\n}\r\n"],"names":["createClient","randomUUID","dotenv","config","db","url","process","env","SQLITE_URL","authToken","SQLITE_TOKEN","MovieModel","getAll","movies","moviesr","movieUpdated","execute","rows","Promise","all","map","movie","genres_id","genres_idr","genres","updated","sql","args","id","gnrs","genre_id","name","create","title","year","description","director","duration","image","uuid","genre","getById","length","update"],"mappings":"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"}